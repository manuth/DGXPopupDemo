<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:local="clr-namespace:DGXPopupDemo"
                    xmlns:dgx="urn:tom-englert.de/DataGridExtensions"
                    xmlns:fi="clr-namespace:DGXPopupDemo.Interaction.Controls.Filtering"
                    x:Name="Control">
    <Style TargetType="{x:Type fi:NumericFilterControl}">
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type fi:NumericFilterControl}">
                    <StackPanel Orientation="Horizontal">
                        <Decorator Width="5" />
                        <ToggleButton x:Name="button"
                                      Background="Transparent"
                                      IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                      Style="{DynamicResource {x:Type ToggleButton}}">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock x:Name="activeIndicator"
                                           Visibility="Hidden"
                                           Text="."
                                           Margin="2,0,-4,0"
                                           Foreground="{Binding ElementName=filterSymbol, Path=Foreground}"
                                           FontWeight="Bold" />
                                <Control x:Name="filterSymbol"
                                         Style="{DynamicResource {x:Static dgx:DataGridFilter.IconStyleKey}}" />
                            </StackPanel>
                        </ToggleButton>
                        <Popup x:Name="popup"
                               StaysOpen="False"
                               IsOpen="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                            <i:Interaction.Behaviors>
                                <fi:FilterPopupBehavior ToggleButton="{Binding ElementName=button}" />
                            </i:Interaction.Behaviors>
                            <Border Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                                    BorderThickness="1"
                                    MinWidth="100"
                                    BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"
                                    Padding="5">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Label Content="Min:"
                                           VerticalAlignment="Center" />
                                    <TextBox Grid.Column="1"
                                             Text="{Binding Minimum, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
                                    <Label Grid.Row="1"
                                           Content="Max:"
                                           VerticalAlignment="Center" />
                                    <TextBox Grid.Row="1"
                                             Grid.Column="1"
                                             Text="{Binding Maximum, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
                                </Grid>
                            </Border>
                        </Popup>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="False">
                            <Setter TargetName="button"
                                    Property="BorderBrush"
                                    Value="Transparent" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=Filter.IsFiltered, RelativeSource={RelativeSource Self}}"
                                     Value="True">
                            <Setter TargetName="activeIndicator"
                                    Property="Visibility"
                                    Value="Visible" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>